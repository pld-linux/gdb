[commit] [patch] Fix CU relative vs. absolute offsets [Re: RFC: problem with DW_OP_GNU_deref_type and dwarf's get_base_type callback]
http://sourceware.org/ml/gdb-patches/2012-03/msg00284.html
http://sourceware.org/ml/gdb-cvs/2012-03/msg00134.html

### src/gdb/ChangeLog	2012/03/08 19:08:09	1.13979
### src/gdb/ChangeLog	2012/03/08 19:37:04	1.13980
## -1,5 +1,15 @@
 2012-03-08  Jan Kratochvil  <jan.kratochvil@redhat.com>
 
+	Fix CU relative vs. absolute DIE offsets.
+	* dwarf2loc.h (dwarf2_fetch_die_location_block): Rename parameter
+	offset to offset_in_cu.
+	* dwarf2read.c (process_enumeration_scope): Add CU offset to
+	TYPE_OFFSET.
+	(dwarf2_fetch_die_location_block): Rename parameter offset to
+	offset_in_cu.  New variable offset, add CU offset to OFFSET_IN_CU.
+
+2012-03-08  Jan Kratochvil  <jan.kratochvil@redhat.com>
+
 	* libunwind-frame.c: Rename to ...
 	* ia64-libunwind-tdep.c: ... here.
 	* libunwind-frame.h: Rename to ...
--- src/gdb/dwarf2loc.h	2012/01/05 21:53:14	1.29
+++ src/gdb/dwarf2loc.h	2012/03/08 19:37:07	1.30
@@ -61,7 +61,7 @@
    CORE_ADDR pc);
 
 struct dwarf2_locexpr_baton dwarf2_fetch_die_location_block
-  (unsigned int offset, struct dwarf2_per_cu_data *per_cu,
+  (unsigned int offset_in_cu, struct dwarf2_per_cu_data *per_cu,
    CORE_ADDR (*get_frame_pc) (void *baton),
    void *baton);
 
--- src/gdb/dwarf2read.c	2012/03/06 23:41:50	1.619
+++ src/gdb/dwarf2read.c	2012/03/08 19:37:07	1.620
@@ -8031,7 +8031,8 @@
 	= lookup_signatured_type_at_offset (dwarf2_per_objfile->objfile,
 					    cu->per_cu->debug_types_section,
 					    cu->per_cu->offset);
-      if (type_sig->type_offset != die->offset)
+      if (type_sig->per_cu.offset + type_sig->type_offset
+	  != die->offset)
 	return;
     }
 
@@ -14202,11 +14203,12 @@
    dwarf2_locexpr_baton->data has lifetime of PER_CU->OBJFILE.  */
 
 struct dwarf2_locexpr_baton
-dwarf2_fetch_die_location_block (unsigned int offset,
+dwarf2_fetch_die_location_block (unsigned int offset_in_cu,
 				 struct dwarf2_per_cu_data *per_cu,
 				 CORE_ADDR (*get_frame_pc) (void *baton),
 				 void *baton)
 {
+  unsigned int offset = per_cu->offset + offset_in_cu;
   struct dwarf2_cu *cu;
   struct die_info *die;
   struct attribute *attr;
### src/gdb/testsuite/ChangeLog	2012/03/08 07:42:50	1.3127
### src/gdb/testsuite/ChangeLog	2012/03/08 19:37:07	1.3128
## -1,5 +1,11 @@
 2012-03-08  Jan Kratochvil  <jan.kratochvil@redhat.com>
 
+	Fix CU relative vs. absolute DIE offsets.
+	* gdb.dwarf2/dw2-op-call.S: New compilation unit preceding the existing
+	one.
+
+2012-03-08  Jan Kratochvil  <jan.kratochvil@redhat.com>
+
 	Fix false FAIL on distros with relro linkage as default.
 	* gdb.reverse/solib-precsave.exp: Try to compile the test using
 	-Wl,-z,norelro first.
--- src/gdb/testsuite/gdb.dwarf2/dw2-op-call.S	2012/01/04 08:17:51	1.5
+++ src/gdb/testsuite/gdb.dwarf2/dw2-op-call.S	2012/03/08 19:37:08	1.6
@@ -23,6 +23,23 @@
 array3:	.2byte	3
 
 	.section .debug_info
+.Lcu0_begin:
+	/* CU header */
+	.4byte	.Lcu0_end - .Lcu0_start		/* Length of Compilation Unit */
+.Lcu0_start:
+	.2byte	2				/* DWARF Version */
+	.4byte	.Labbrev1_begin			/* Offset into abbrev section */
+	.byte	4				/* Pointer size */
+
+	/* CU die */
+	.uleb128 1				/* Abbrev: DW_TAG_compile_unit */
+	.ascii	"file0.txt\0"			/* DW_AT_name */
+	.ascii	"GNU C 3.3.3\0"			/* DW_AT_producer */
+	.byte	2				/* DW_LANG_C (C) */
+
+	.byte	0				/* End of children of CU */
+.Lcu0_end:
+
 .Lcu1_begin:
 	/* CU header */
 	.4byte	.Lcu1_end - .Lcu1_start		/* Length of Compilation Unit */
