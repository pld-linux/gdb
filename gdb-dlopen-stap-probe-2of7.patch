http://sourceware.org/ml/gdb-cvs/2012-07/msg00124.html

### src/gdb/ChangeLog	2012/07/18 16:12:15	1.14474
### src/gdb/ChangeLog	2012/07/18 16:20:36	1.14475
## -1,5 +1,10 @@
 2012-07-18  Sergio Durigan Junior  <sergiodj@redhat.com>
 
+	* probe.c (probe_safe_evaluate_at_pc): Rename variable `n_probes'.
+	* stap-probe.c (compile_probe_arg): Likewise.
+
+2012-07-18  Sergio Durigan Junior  <sergiodj@redhat.com>
+
 	* elfread.c (elf_get_probe_argument_count): Remove `objfile' argument.
 	(elf_compile_to_ax): Likewise.
 	* infrun.c (insert_exception_resume_from_probe): Likewise.
--- src/gdb/probe.c	2012/07/18 16:12:17	1.4
+++ src/gdb/probe.c	2012/07/18 16:20:43	1.5
@@ -637,7 +637,7 @@
 {
   struct probe *probe;
   const struct sym_probe_fns *probe_fns;
-  unsigned n_probes;
+  unsigned n_args;
 
   probe = find_probe_by_pc (get_frame_pc (frame));
   if (!probe)
@@ -648,9 +648,9 @@
   gdb_assert (probe->objfile->sf->sym_probe_fns != NULL);
 
   probe_fns = probe->objfile->sf->sym_probe_fns;
-  n_probes = probe_fns->sym_get_probe_argument_count (probe);
+  n_args = probe_fns->sym_get_probe_argument_count (probe);
 
-  if (n >= n_probes)
+  if (n >= n_args)
     return NULL;
 
   return probe_fns->sym_evaluate_probe_argument (probe, n);
--- src/gdb/stap-probe.c	2012/07/18 16:12:17	1.5
+++ src/gdb/stap-probe.c	2012/07/18 16:20:43	1.6
@@ -1160,7 +1160,7 @@
   int sel = (int) (uintptr_t) data;
   struct probe *pc_probe;
   const struct sym_probe_fns *pc_probe_fns;
-  int n_probes;
+  int n_args;
 
   /* SEL == -1 means "_probe_argc".  */
   gdb_assert (sel >= -1);
@@ -1175,20 +1175,20 @@
 
   pc_probe_fns = pc_probe->objfile->sf->sym_probe_fns;
 
-  n_probes = pc_probe_fns->sym_get_probe_argument_count (pc_probe);
+  n_args = pc_probe_fns->sym_get_probe_argument_count (pc_probe);
 
   if (sel == -1)
     {
       value->kind = axs_rvalue;
       value->type = builtin_type (expr->gdbarch)->builtin_int;
-      ax_const_l (expr, n_probes);
+      ax_const_l (expr, n_args);
       return;
     }
 
   gdb_assert (sel >= 0);
-  if (sel >= n_probes)
+  if (sel >= n_args)
     error (_("Invalid probe argument %d -- probe has %d arguments available"),
-	   sel, n_probes);
+	   sel, n_args);
 
   pc_probe_fns->sym_compile_to_ax (pc_probe, expr, value, sel);
 }
